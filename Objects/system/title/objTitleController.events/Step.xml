<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (ns_is_connected() &amp;&amp; !sent) {
    ns_get_global_data('version')
    sent = true
}
</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">jumpPressed = key_check_pressed(global.jumpbutton)
shootPressed = key_check_pressed(global.shootbutton)
prev = key_check_pressed(global.leftbutton) || key_check_pressed(global.upbutton)
next = key_check_pressed(global.rightbutton) || key_check_pressed(global.downbutton)

if (!ns_is_online_mode()) {
    // single player
    if (jumpPressed) {
        music_play(sndJump)
        room_goto(rMenu)
    }
} else {
    // multiple player
    if (status == CHOOSE_MODE) {
        if (prev) {
            music_play(sndJump)
            pointer = gen_sequence(pointer, 0, 2, true)
        }
        if (next) {
            music_play(sndJump)
            pointer = gen_sequence(pointer, 0, 2)
        }
        if (jumpPressed) {
            music_play(sndJump)
            switch (pointer) {
                case ACTION_SINGLE:
                    ns_single_player()
                    break
                case ACTION_MULTIPLE:
                    ns_multiple_player()
                    break
                case ACTION_EXIT:
                    game_end()
                    break
            }
            if (!debug_mode) {
                status = CHOOSE_ACTION
                if (lastuser != '') {
                    pointer = ACTION_LOGIN
                } else {
                    pointer = ACTION_REGISTER
                }
            }
        }
    } else if (status == CHOOSE_ACTION) {
        if (jumpPressed) {
            music_play(sndJump)
            switch (pointer) {
                case ACTION_REGISTER:
                    ns_register()
                    break
                case ACTION_LOGIN:
                    ns_login(lastuser)
                    break
                case ACTION_RETURN:
                    status = CHOOSE_MODE
                    pointer = ACTION_MULTIPLE
                    break
            }
        }
        if (shootPressed) {
            music_play(sndDJump)
            status = CHOOSE_MODE
            pointer = ACTION_MULTIPLE
        }
        if (prev) {
            music_play(sndJump)
            pointer = gen_sequence(pointer, 0, 2, true)
        }
        if (next) {
            music_play(sndJump)
            pointer = gen_sequence(pointer, 0, 2)
        }
    }
}

</argument>
      </arguments>
    </action>
    <action id="605" library="1">
      <!--action name: Comment-->
      <kind>NORMAL</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>false</canApplyTo>
      <actionType>NONE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">Debug Only Functions</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">// debug only
if (!debug_mode) exit;

if (key_check_pressed(vk_shift)) {
    if (ns_is_online_mode()) {
        username = global.debug_host_name
        password = global.debug_host_pass
        // send the tcp packet
        cmd = cmd_init(
            'login', 2,
            'name', username,
            'password', password
        )
        ns_send(cmd)
    }
}
if (key_check_pressed(vk_control)) {
    username = global.debug_guest_name
    password = global.debug_guest_pass
    cmd = cmd_init(
        "login", 2,
        "name", username,
        "password", password
    )
    ns_send(cmd)
    global.savenum = 2
}
if (key_check_pressed(vk_space)) {
    global._online_mode = false
    global.savenum = 1
    if (file_exists(getSaveFile(global.savenum))) {
        loadGame()
    } else {
        global.death = 0
        global.timestep = 0
        global.difficulty = 1
        room_goto(global.first_stage)
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
