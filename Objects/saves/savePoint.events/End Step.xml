<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="2">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (saveTimer &gt; 0) {
    saveTimer -= 1
}

switch (mode) {
    case SAVE_MODE_SHOOT:
        shouldSave =
            place_meeting(x, y, bullet) ||
            (place_meeting(x, y, player) &amp;&amp;
                keyboard_check_pressed(global.shootbutton))
        break
    case SAVE_MODE_TOUCH:
        shouldSave = place_meeting(x, y, player)
        break
    case SAVE_MODE_PRESS:
        if (ord(key) != 0) {
            // letters
            shouldSave =
                place_meeting(x, y, player) &amp;&amp;
                keyboard_check_pressed(
                    ord(string_upper(string_char_at(key, 1)))
                )
        } else {
            // function keys, such as vk_up
            shouldSave =
                place_meeting(x, y, player) &amp;&amp; keyboard_check_pressed(key)
        }
        break
}

if (shouldSave) {
    if (saveTimer &lt;= 0 &amp;&amp; instance_exists(player) == true) {
        saveTimer = 30
        image_index = 2
        alarm[0] = 80
        ns_send_instance()
        saveGame()
    }
}

</argument>
      </arguments>
    </action>
  </actions>
</event>
