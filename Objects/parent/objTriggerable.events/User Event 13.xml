<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="OTHER" id="23">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (pth != 0) {
    // this is a path killer
    path_start(pth, spd, enda, 0)
    if (scl != 0) {
        path_scale = scl
    }
} else if (h != 0 || v != 0 || spd != 0 || dir != 0) {
    // this is a moving killer
    if (spd != 0) {
        hspeed = lengthdir_x(spd, dir)
        vspeed = lengthdir_y(spd, dir)
    } else {
        hspeed = h
        vspeed = v
    }
} else if (tarx != 0 || tary != 0) {
    // this is a scaling killer
    xoff = sprite_get_xoffset(sprite_index)
    yoff = sprite_get_yoffset(sprite_index)
    if (cx == 0 &amp;&amp; cy == 0 &amp;&amp; origin != 0) {
        width = sprite_get_width(sprite_index)
        height = sprite_get_height(sprite_index)
        cx = ((origin - 1) mod 3) / 2 * width
        cy = ((origin - 1) div 3) / 2 * height
    }
    xs = image_xscale
    ys = image_yscale
    alarm[11] = 1
} else if (angle != 0) {
    // this is a rotating trigger
    if (cx == 0 &amp;&amp; cy == 0 &amp;&amp; origin != 0) {
        width = sprite_get_width(sprite_index)
        height = sprite_get_height(sprite_index)
        cx = ((origin - 1) mod 3) / 2 * width
        cy = ((origin - 1) div 3) / 2 * height
    }
    alarm[10] = 1
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
