<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">// This is the built-in avoidance in yuuutu engine, but the timeline of it is somewhat hard to read
// so I rewrote this version of timeline using simple setting and stopping alarms
// Hope that this version can make you understand avoidance bosses better

if (global.boss[1]) {
    instance_destroy()
} else {
    global.frozen = true
}

globalvar SPB;
//stop previous music
SS_StopSound(curMusic)
//the beats per minute variable of a song
//you can get this from softwares like "MixMeister BPM Analyzer"
BPM = 210
//how many timeline steps are there in one beat
beat = 4
//calculating "Step Per Beat", that is, how many frames are there during one beat
//this variable is extremely useful for building timelines
SPB = 3000 / BPM
//set the timeline
timeline_index = tl_miku
timeline_running = 1
//calculating timeline speed
timeline_speed = BPM * beat / 3000
//freeze the player using global.frozen


</argument>
      </arguments>
    </action>
  </actions>
</event>
