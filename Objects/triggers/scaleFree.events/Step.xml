<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (triggered) {
    if (tarx != 0) {
        if (time == 0) {
            if (tarx * (image_xscale - (tarx - xsp)) &lt; 0) {
                image_xscale += xsp
                x -= (((origin - 1) mod 3) / 2 * width - xoff) * xsp
            } else {
                image_xscale = tarx
                //given that the starting image_xscale = 1
                x =
                    xstart -
                    (((origin - 1) mod 3) / 2 * width - xoff) * (tarx - 1)
            }
        } else {
            if (tarx * (image_xscale - tarx) &lt; 0) {
                image_xscale += (tarx - 1) / time
                x -= (((origin - 1) mod 3) / 2 * width - xoff) * (tarx - 1) / time
            }
        }
    }
    if (tary != 0) {
        if (time == 0) {
            if (tary * (image_yscale - (tary - ysp)) &lt; 0) {
                image_yscale += ysp
                y -= ((origin - 1) div 3 / 2 * height - yoff) * ysp
            } else {
                image_yscale = tary
                //given that the starting image_yscale = 1
                y =
                    ystart -
                    ((origin - 1) div 3 / 2 * height - yoff) * (tary - 1)
            }
        } else {
            if (tary * (image_yscale - tary) &lt; 0) {
                image_yscale += (tary - 1) / time
                y -= ((origin - 1) div 3 / 2 * height - yoff) * (tary - 1) / time
            }
        }
    }
}

</argument>
      </arguments>
    </action>
  </actions>
</event>
